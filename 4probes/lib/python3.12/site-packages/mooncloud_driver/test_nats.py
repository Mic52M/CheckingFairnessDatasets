from typing import Any, Coroutine
import pytest
import mooncloud_driver.nats_controller as nats_controller
import mooncloud_driver.config as config
import mooncloud_driver.result as result
import mooncloud_driver.writer as writer

t_config:config.Config=config.Config(
    logger_name='Probe',
    user_evaluation_rule_id="0",
    abstract_evaluation_rule_id="0",
    test_id="0",
    control_id="0",
    target_id="0",
    zone_id="0",
    project_id="0",
    user_id="0",
    input={'host':'sesar.di.unimi.it'},
    meta_config=config.MetaConfig(
        input_path="./probe/input.json",
        schema_path="./probe/schema.json"
    ),
    is_production=False,
    read_from_stdin=False,
    nats_host="localhost",
    nats_port="4222",
    nats_user="probe",
    nats_password="pass"
)

async def internal_nats_debug_add_stream(nats_cont:nats_controller.NatsController):
    await nats_cont.js.add_stream(name="sample-stream", subjects=["foo"])

@pytest.mark.asyncio
async def test_nats_connect():
    nats_cont=nats_controller.NatsController(current_config=t_config)
    await nats_cont.connect()

@pytest.mark.asyncio
async def test_nats_publish():
    result_to_write=result.Result(base_extra_data={"test":"1"},integer_result=1,pretty_result="test result")
    nats_cont=nats_controller.NatsController(current_config=t_config)
    await nats_cont.connect()
    await internal_nats_debug_add_stream(nats_cont=nats_cont)
    ack=await nats_cont.publishResult(subject="foo",result_to_write=writer.result_to_ew_result(result_to_write=result_to_write,current_config=t_config))
    assert ack is not None and ack !=""